Description: A lambda and API gateway endpoint for signing image urls
Parameters:
  ImageSaltParameter:
    Type: String
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  microservicehttpendpointpython3:
    Type: AWS::Serverless::Function
    Properties:
      Description: A simple backend (read/write to DynamoDB) with a RESTful API endpoint using Amazon API Gateway.
      MemorySize: 512
      Environment:
        Variables:
          IMAGE_SALT:
            Ref: ImageSaltParameter 
      Handler: lambda_function.lambda_handler
      Timeout: 10
      CodeUri:
        Bucket: awsserverlessrepo-changesets-18ssd5swmy82n
        Key: 642631414762:philip.mcmahon-c2e6d051-3006-4064-a082-545166e77055
      Runtime: python3.6
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /sign
            RestApiId:
              Ref: ServerlessRestApi
            Method: GET
  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      __MANAGE_SWAGGER: true
      DefinitionBody:
        info:
          version: '1.0'
          title:
            Ref: AWS::StackName
        paths:
          /sign:
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${microservicehttpendpointpython3.Arn}/invocations
              responses: {}
        swagger: '2.0'
      StageName: Prod